@page "/cart"

@using BoardgameStore.Order.Repositories
@using BoardgameStore.Order.Entities

@inject ICartRepository CartRepository
@inject NavigationManager NavigationManager



@if (!_games.Any())
{
    <div class="container card p-5">
        <p>No games yet. <a href="">Browse for games!</a></p>
    </div>
    return;
}

<div class="container card p-5 d-flex flex-column">
    <table class="table">
        <thead>
        <tr>
            <th></th>
            <th>Item</th>
            <th>Price</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var game in _games)
        {
            <tr>
                <td style="width: 20px">
                    <div style="width:inherit; height: 20px; background: url('@game.ImageUrl') no-repeat center center; background-size: cover; border-radius: 5px"></div>
                </td>
                <td>
                    <a href="/game?id=@game.Id">@game.Name</a>
                </td>
                <td>@game.Price.ToString("c")</td>
            </tr>
        }
        </tbody>
    </table>

    <button class="btn btn-success" @onclick="Order">Order!</button>

</div>


@code {

    private IEnumerable<Game> _games;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _games = CartRepository.Get().Games;
    }

    private void Order()
    {
        if (!_games.Any()) return;

        CartRepository.ClearCart();
        NavigationManager.NavigateTo("/orderconfirmation");
    }

}
